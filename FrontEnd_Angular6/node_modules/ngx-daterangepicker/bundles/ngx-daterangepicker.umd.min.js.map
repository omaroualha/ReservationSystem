{"version":3,"sources":["ng://ngx-daterangepicker/lib/ngx-daterangepicker/constants.ts","ng://ngx-daterangepicker/lib/ngx-daterangepicker/ngx-daterangepicker.component.ts","ng://ngx-daterangepicker/lib/ngx-daterangepicker/ngx-format.pipe.ts","ng://ngx-daterangepicker/lib/ngx-daterangepicker.module.ts"],"names":["locales","es","en","DATERANGEPICKER_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","NgxDateRangePickerComponent","multi","elementRef","cdr","this","defaultOptions","theme","labels","locale","menu","dateFormat","outputFormat","outputType","startOfWeek","date","onTouchedCallback","onChangeCallback","Object","defineProperty","prototype","modelValue","value","writeValue","registerOnChange","fn","registerOnTouched","ngAfterViewInit","arrowLeft","fromInput","nativeElement","offsetWidth","detectChanges","ngOnInit","_this","opened","from","to","dateFns.addDays","options","initNames","range","selectRange","filter","item","alias","selectDates","ngOnChanges","changes","dayNames","i","push","getDayOfWeek","day","Date","dayOfWeek","dateFns.format","dateFns.setDay","weekStartsOn","toUpperCase","substring","generateCalendar","days","start","dateFns.startOfMonth","end","dateFns.endOfMonth","dateFns.eachDay","map","d","endOfWeek","dateFns.getDate","weekday","dateFns.getDay","today","dateFns.isToday","firstMonthDay","dateFns.isFirstDayOfMonth","lastMonthDay","dateFns.isLastDayOfMonth","visible","dateFns.isSameDay","dateFrom","dateTo","isWithinRange","dateFns.isWithinRange","prevMonthDayNum","prevMonthDays","Array","keys","dateFns.subDays","concat","toggleCalendar","e","selection","closeCalendar","selectDate","index","preventDefault","selectedDate","dateFns.isBefore","dateFns.isAfter","length","active","prevMonth","dateFns.subMonths","nextMonth","dateFns.addMonths","dates","dateFns.startOfDay","year","month","fromDate","toDate","operand","operation","charAt","amount","Math","abs","parseInt","ope","match","dateFns.addWeeks","dateFns.startOfWeek","dateFns.endOfWeek","dateFns.addYears","dateFns.startOfYear","dateFns.endOfYear","dateFns.subWeeks","dateFns.subYears","handleBlurClick","target","srcElement","contains","classList","Component","args","selector","template","styles","providers","ElementRef","ChangeDetectorRef","ViewChild","Input","HostListener","NgxFormatPipe","transform","_i","arguments","hasOwnProperty","Pipe","name","NgxDateRangePickerModule","NgModule","imports","CommonModule","FormsModule","declarations","exports"],"mappings":"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","sourcesContent":["import * as es from 'date-fns/locale/es';\nimport * as en from 'date-fns/locale/en';\n\nexport const locales: any = {\n  es,\n  en,\n};\n","import {\n    Component, OnInit, HostListener, ElementRef, forwardRef, Input, OnChanges, SimpleChange,\n    ViewChild, AfterViewInit, ChangeDetectorRef\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport * as dateFns from 'date-fns';\nimport { locales } from './constants';\n\nexport interface NgxDateRangePickerDates {\n    from: Date | {\n        year: number,\n        month: number,\n        day: number\n    };\n    to: Date | {\n        year: number,\n        month: number,\n        day: number,\n    };\n}\n\nexport interface NgxMenuItem {\n    alias: string;\n    text: string;\n    operation: string;\n    active?: boolean;\n}\n\nexport interface NgxDateRangePickerOptions {\n    theme: 'default' | 'green' | 'teal' | 'cyan' | 'grape' | 'red' | 'gray';\n    range?: string;\n    locale?: string;\n    labels: string[];\n    menu: NgxMenuItem[];\n    dateFormat: string;\n    outputFormat: string;\n    startOfWeek: number;\n    outputType?: 'string' | 'object';\n    date?: NgxDateRangePickerDates;\n}\n\nexport interface IDay {\n    date: Date;\n    day: number;\n    weekday: number;\n    today: boolean;\n    firstMonthDay: boolean;\n    lastMonthDay: boolean;\n    visible: boolean;\n    from: boolean;\n    to: boolean;\n    isWithinRange: boolean;\n}\n\nexport let DATERANGEPICKER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NgxDateRangePickerComponent),\n    multi: true\n};\n\n@Component({\n    selector: 'ngx-daterangepicker',\n    template: `<div class=\"ngx-daterangepicker\" [ngClass]=\"{ 'is-active': !!opened,\n                  'theme-green': options.theme === 'green',\n                  'theme-teal': options.theme === 'teal',\n                  'theme-cyan': options.theme === 'cyan',\n                  'theme-grape': options.theme === 'grape',\n                  'theme-red': options.theme === 'red',\n                  'theme-gray': options.theme === 'gray' }\">\n\n  <div #fromInput class=\"input-section\" (click)=\"toggleCalendar($event, 'from')\">\n    <span class=\"label-txt\">{{options.labels[0]}}</span>\n    <span class=\"value-txt\">{{ dateFrom | ngxFormat: options.dateFormat }}</span>\n    <span class=\"cal-icon\">\n      <svg width=\"94px\" height=\"94px\" viewBox=\"3 3 94 94\" version=\"1.1\">\n        <g id=\"Group\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" transform=\"translate(3.000000, 3.000000)\">\n          <path d=\"M67.166,20.168 C69.238,20.168 70.916,18.489 70.916,16.418 L70.916,4.085 C70.916,2.014 69.238,0.335 67.166,0.335 C65.096,0.335 63.416,2.014 63.416,4.085 L63.416,16.418 C63.416,18.489 65.096,20.168 67.166,20.168 Z M26.834,20.168 C28.904,20.168 30.584,18.489 30.584,16.418 L30.584,4.085 C30.584,2.014 28.904,0.335 26.834,0.335 C24.762,0.335 23.084,2.014 23.084,4.085 L23.084,16.418 C23.084,18.489 24.762,20.168 26.834,20.168 Z M88.833,9.5 L75.416,9.5 L75.416,16.418 C75.416,20.967 71.715,24.668 67.166,24.668 C62.617,24.668 58.916,20.967 58.916,16.418 L58.916,9.5 L35.084,9.5 L35.084,16.418 C35.084,20.967 31.383,24.668 26.834,24.668 C22.285,24.668 18.584,20.967 18.584,16.418 L18.584,9.5 L5.167,9.5 C2.405,9.5 0.167,11.738 0.167,14.5 L0.167,35 L93.833,35 L93.833,14.5 C93.833,11.738 91.595,9.5 88.833,9.5 Z M0.167,88.167 C0.167,90.929 2.405,93.167 5.167,93.167 L88.833,93.167 C91.595,93.167 93.833,90.929 93.833,88.167 L93.833,39 L0.167,39 L0.167,88.167 Z M69.387,50.875 L82.179,50.875 L82.179,63.667 L69.387,63.667 L69.387,50.875 Z M69.387,69.125 L82.179,69.125 L82.179,81.917 L69.387,81.917 L69.387,69.125 Z M50.198,50.875 L62.99,50.875 L62.99,63.667 L50.198,63.667 L50.198,50.875 Z M50.198,69.125 L62.99,69.125 L62.99,81.917 L50.198,81.917 L50.198,69.125 Z M31.01,50.875 L43.802,50.875 L43.802,63.667 L31.01,63.667 L31.01,50.875 Z M31.01,69.125 L43.802,69.125 L43.802,81.917 L31.01,81.917 L31.01,69.125 Z M11.821,50.875 L24.613,50.875 L24.613,63.667 L11.821,63.667 L11.821,50.875 Z M11.821,69.125 L24.613,69.125 L24.613,81.917 L11.821,81.917 L11.821,69.125 Z\"\n            id=\"Shape\" fill=\"#000000\" fill-rule=\"nonzero\"></path>\n        </g>\n      </svg>\n    </span>\n  </div>\n\n  <div class=\"input-section\" (click)=\"toggleCalendar($event, 'to')\">\n    <span class=\"label-txt\">{{options.labels[1]}}</span>\n    <span class=\"value-txt\">{{ dateTo | ngxFormat: options.dateFormat }}</span>\n    <span class=\"cal-icon\">\n      <svg width=\"94px\" height=\"94px\" viewBox=\"3 3 94 94\" version=\"1.1\">\n        <g id=\"Group\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" transform=\"translate(3.000000, 3.000000)\">\n          <path d=\"M67.166,20.168 C69.238,20.168 70.916,18.489 70.916,16.418 L70.916,4.085 C70.916,2.014 69.238,0.335 67.166,0.335 C65.096,0.335 63.416,2.014 63.416,4.085 L63.416,16.418 C63.416,18.489 65.096,20.168 67.166,20.168 Z M26.834,20.168 C28.904,20.168 30.584,18.489 30.584,16.418 L30.584,4.085 C30.584,2.014 28.904,0.335 26.834,0.335 C24.762,0.335 23.084,2.014 23.084,4.085 L23.084,16.418 C23.084,18.489 24.762,20.168 26.834,20.168 Z M88.833,9.5 L75.416,9.5 L75.416,16.418 C75.416,20.967 71.715,24.668 67.166,24.668 C62.617,24.668 58.916,20.967 58.916,16.418 L58.916,9.5 L35.084,9.5 L35.084,16.418 C35.084,20.967 31.383,24.668 26.834,24.668 C22.285,24.668 18.584,20.967 18.584,16.418 L18.584,9.5 L5.167,9.5 C2.405,9.5 0.167,11.738 0.167,14.5 L0.167,35 L93.833,35 L93.833,14.5 C93.833,11.738 91.595,9.5 88.833,9.5 Z M0.167,88.167 C0.167,90.929 2.405,93.167 5.167,93.167 L88.833,93.167 C91.595,93.167 93.833,90.929 93.833,88.167 L93.833,39 L0.167,39 L0.167,88.167 Z M69.387,50.875 L82.179,50.875 L82.179,63.667 L69.387,63.667 L69.387,50.875 Z M69.387,69.125 L82.179,69.125 L82.179,81.917 L69.387,81.917 L69.387,69.125 Z M50.198,50.875 L62.99,50.875 L62.99,63.667 L50.198,63.667 L50.198,50.875 Z M50.198,69.125 L62.99,69.125 L62.99,81.917 L50.198,81.917 L50.198,69.125 Z M31.01,50.875 L43.802,50.875 L43.802,63.667 L31.01,63.667 L31.01,50.875 Z M31.01,69.125 L43.802,69.125 L43.802,81.917 L31.01,81.917 L31.01,69.125 Z M11.821,50.875 L24.613,50.875 L24.613,63.667 L11.821,63.667 L11.821,50.875 Z M11.821,69.125 L24.613,69.125 L24.613,81.917 L11.821,81.917 L11.821,69.125 Z\"\n            id=\"Shape\" fill=\"#000000\" fill-rule=\"nonzero\"></path>\n        </g>\n      </svg>\n    </span>\n  </div>\n\n  <div class=\"calendar\" [ngClass]=\"{ 'is-opened': !!opened, 'is-to': opened === 'to' }\">\n    <div class=\"arrow\" [ngStyle]=\"{left: (arrowLeft || 60) + 'px'}\"></div>\n    <div class=\"calendar-container\">\n      <div class=\"controls\">\n        <span class=\"control-icon\" (click)=\"prevMonth()\">\n          <svg width=\"13px\" height=\"20px\" viewBox=\"0 44 13 20\" version=\"1.1\">\n            <path d=\"M11.7062895,64 C11.6273879,64 11.5477012,63.9744846 11.480576,63.921491 L0.139160349,54.9910879 C0.0551556781,54.9247477 0.00451734852,54.8250413 0.000199351429,54.7174839 C-0.00333355528,54.6107116 0.0402389608,54.5074722 0.119140544,54.4356364 L11.4605562,44.095211 C11.6093308,43.9589979 11.8401474,43.9707742 11.9751829,44.1187637 C12.1110036,44.2675384 12.1004048,44.4983549 11.9516302,44.6333905 L0.928176181,54.6841175 L11.9323955,63.3491601 C12.0905912,63.4735969 12.1176768,63.7028433 11.9928475,63.861039 C11.9206191,63.9521095 11.8138469,64 11.7062895,64 Z\"\n              id=\"Shape\" stroke=\"none\" fill=\"#000000\" fill-rule=\"nonzero\"></path>\n          </svg>\n        </span>\n        <span class=\"control-title capitalize\">\n          {{ date | ngxFormat:'MMMM YYYY':options.locale }}\n        </span>\n        <span class=\"control-icon\" (click)=\"nextMonth()\">\n          <svg width=\"13px\" height=\"20px\" viewBox=\"21 44 13 20\">\n            <path d=\"M32.7062895,64 C32.6273879,64 32.5477012,63.9744846 32.480576,63.921491 L21.1391603,54.9910879 C21.0551557,54.9247477 21.0045173,54.8250413 21.0001994,54.7174839 C20.9966664,54.6107116 21.040239,54.5074722 21.1191405,54.4356364 L32.4605562,44.095211 C32.6093308,43.9589979 32.8401474,43.9707742 32.9751829,44.1187637 C33.1110036,44.2675384 33.1004048,44.4983549 32.9516302,44.6333905 L21.9281762,54.6841175 L32.9323955,63.3491601 C33.0905912,63.4735969 33.1176768,63.7028433 32.9928475,63.861039 C32.9206191,63.9521095 32.8138469,64 32.7062895,64 Z\"\n              id=\"Shape\" stroke=\"none\" fill=\"#000000\" fill-rule=\"nonzero\" transform=\"translate(27.035642, 54.000000) scale(-1, 1) translate(-27.035642, -54.000000) \"></path>\n          </svg>\n        </span>\n      </div>\n      <div class=\"day-names\">\n        <span class=\"day-name\" *ngFor=\"let name of dayNames\">{{ name }}</span>\n      </div>\n      <div class=\"days\">\n        <div class=\"day\" *ngFor=\"let d of days; let i = index;\" [ngClass]=\"{\n               'is-within-range': d.isWithinRange,\n               'is-from': d.from,\n               'is-to': d.to }\"\n          (click)=\"selectDate($event, i)\">\n          <span *ngIf=\"d.visible\" class=\"day-num\" [class.is-active]=\"d.from || d.to\">{{ d.day }}</span>\n        </div>\n      </div>\n    </div>\n    <div class=\"side-container\" *ngIf=\"options.menu && options.menu.length > 0\">\n      <div class=\"side-container-buttons\">\n        <button type=\"button\" class=\"side-button\" *ngFor=\"let range of options.menu\" (click)=\"selectRange(range)\"\n          [class.is-active]=\"range.active\">{{range.text}}\n        </button>\n      </div>\n      <span class=\"close-icon\" (click)=\"closeCalendar($event)\">\n        <svg width=\"20px\" height=\"20px\" viewBox=\"47 44 20 20\" version=\"1.1\">\n          <g id=\"Group\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" transform=\"translate(48.000000, 44.000000)\">\n            <path d=\"M19.6876399,20 C19.6047542,19.999927 19.52529,19.9669423 19.4667175,19.9082976 L0.0839056416,0.525743396 C-0.0308734765,0.402566324 -0.0274867013,0.210616527 0.0915663128,0.0915650956 C0.210619327,-0.0274863359 0.402571676,-0.030873066 0.525750385,0.0839045261 L19.9085623,19.4664587 C19.9978567,19.5558631 20.0245499,19.6902301 19.9762091,19.8069762 C19.9278683,19.9237223 19.8139998,19.9998889 19.6876399,20 Z\"\n              id=\"Shape\" fill=\"#000000\" fill-rule=\"nonzero\"></path>\n            <path d=\"M0.312360116,20 C0.186000167,19.9998889 0.0721317315,19.9237223 0.0237909073,19.8069762 C-0.0245499168,19.6902301 0.0021432967,19.5558631 0.0914377445,19.4664587 L19.4742496,0.0839045261 C19.5974283,-0.030873066 19.7893807,-0.0274863359 19.9084337,0.0915650956 C20.0274867,0.210616527 20.0308735,0.402566324 19.9160944,0.525743396 L0.533282488,19.9082976 C0.474709982,19.9669423 0.395245751,19.999927 0.312360116,20 L0.312360116,20 Z\"\n              id=\"Shape\" fill=\"#000000\" fill-rule=\"nonzero\"></path>\n          </g>\n        </svg>\n      </span>\n    </div>\n  </div>\n</div>\n`,\n    styles: [`.capitalize{text-transform:capitalize}.ngx-daterangepicker{width:100%;height:50px;background:#fff;display:inline-block;border:1px solid #9da3a6;border-radius:7px;position:relative}.ngx-daterangepicker.is-active{border:1px solid #0070ba}.ngx-daterangepicker .input-section{width:calc(100% / 2);height:50px;display:block;float:left;outline:0;padding:7px 10px;color:#2c2e2f;cursor:pointer;position:relative}.ngx-daterangepicker .input-section:first-child{border-right:1px solid #d4dade}.ngx-daterangepicker .input-section .label-txt,.ngx-daterangepicker .input-section .value-txt{display:block}.ngx-daterangepicker .input-section .label-txt{color:#0070ba;font-size:11px}.ngx-daterangepicker .input-section .value-txt{color:#2c2e2f;font-size:13px;border-bottom:1px solid transparent}.ngx-daterangepicker .input-section .cal-icon{position:absolute;display:block;right:10px;bottom:5px}.ngx-daterangepicker .input-section .cal-icon svg{width:20px;height:20px}.ngx-daterangepicker .input-section .cal-icon svg path{fill:#0d79b1}.ngx-daterangepicker .calendar{-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:auto;border:1px solid #0070ba;border-radius:7px;background:#fff;position:absolute;top:75px;left:0;z-index:100000;display:none}.ngx-daterangepicker .calendar.is-opened{display:flex}.ngx-daterangepicker .calendar.is-to .arrow{left:215px}.ngx-daterangepicker .calendar .arrow{position:absolute;display:block;min-width:30px;min-height:30px;top:-15px;left:65px;-webkit-transform:rotate(45deg);transform:rotate(45deg);border-top:1px solid #0070ba;border-left:1px solid #0070ba;background:#fff;transition:left .5s}.ngx-daterangepicker .calendar .calendar-container{display:inline-block;width:340px;height:100%;padding:20px;border-right:1px solid #d4dade;float:left}.ngx-daterangepicker .calendar .calendar-container .controls{width:100%;height:20px;display:flex;justify-content:space-between;align-items:center}.ngx-daterangepicker .calendar .calendar-container .controls .control-icon{display:block;width:12px;height:20px;cursor:pointer}.ngx-daterangepicker .calendar .calendar-container .controls .control-title{font-size:17px;color:#2c2e2f}.ngx-daterangepicker .calendar .calendar-container .day-names{display:inline-block;width:300px;margin-top:30px;margin-bottom:20px}.ngx-daterangepicker .calendar .calendar-container .day-names .day-name{width:calc(300px / 7);font-size:13px;color:#9ca3a6;display:block;float:left;text-align:center;font-weight:700}.ngx-daterangepicker .calendar .calendar-container .days{display:inline-block;width:300px}.ngx-daterangepicker .calendar .calendar-container .days .day{width:calc(300px / 7);font-size:13px;color:#9ca3a6;display:block;float:left;text-align:center;margin-bottom:15px;cursor:pointer;font-weight:700}.ngx-daterangepicker .calendar .calendar-container .days .day.is-from,.ngx-daterangepicker .calendar .calendar-container .days .day.is-within-range{background:#acd5ed;color:#333}.ngx-daterangepicker .calendar .calendar-container .days .day.is-first-weekday,.ngx-daterangepicker .calendar .calendar-container .days .day.is-from{border-top-left-radius:50%;border-bottom-left-radius:50%}.ngx-daterangepicker .calendar .calendar-container .days .day.is-last-weekday,.ngx-daterangepicker .calendar .calendar-container .days .day.is-to{border-top-right-radius:50%;border-bottom-right-radius:50%}.ngx-daterangepicker .calendar .calendar-container .days .day .day-num{display:flex;justify-content:center;align-items:center;float:left;width:42px;height:42px;max-width:42px;max-height:42px;border-radius:50%;padding:10px 15px}.ngx-daterangepicker .calendar .calendar-container .days .day .day-num.is-active,.ngx-daterangepicker .calendar .calendar-container .days .day .day-num:hover{background:#0070ba;color:#fff}.ngx-daterangepicker .calendar .side-container{width:158px;min-height:390px;padding:10px;display:flex;align-items:center;position:relative;overflow:hidden;height:100%}.ngx-daterangepicker .calendar .side-container .side-container-buttons{margin-top:64px;width:200px;overflow-y:auto;overflow-x:hidden;height:390px;position:absolute;padding-bottom:10px}.ngx-daterangepicker .calendar .side-container .side-container-buttons .side-button{background:#fff;border-radius:15px;border:1px solid #0070ba;height:35px;width:138px;display:block;text-align:center;outline:0;margin-bottom:15px;color:#6b737c;font-size:13px;cursor:pointer}.ngx-daterangepicker .calendar .side-container .side-container-buttons .side-button.is-active,.ngx-daterangepicker .calendar .side-container .side-container-buttons .side-button:hover{background:#0070ba;color:#fff}.ngx-daterangepicker .calendar .side-container .close-icon{position:absolute;width:20px;height:20px;top:20px;right:15px;cursor:pointer}.ngx-daterangepicker.theme-green.is-active{border-color:#0b7285}.ngx-daterangepicker.theme-green .input-section .label-txt{color:#0b7285}.ngx-daterangepicker.theme-green .input-section .cal-icon svg path{fill:#0b7285}.ngx-daterangepicker.theme-green .calendar{border-color:#0b7285}.ngx-daterangepicker.theme-green .calendar .arrow{border-top-color:#0b7285;border-left-color:#0b7285}.ngx-daterangepicker.theme-green .calendar .calendar-container .days .day.is-from,.ngx-daterangepicker.theme-green .calendar .calendar-container .days .day.is-within-range{background:#13c3e3}.ngx-daterangepicker.theme-green .calendar .calendar-container .days .day .day-num.is-active,.ngx-daterangepicker.theme-green .calendar .calendar-container .days .day .day-num:hover{background:#0b7285}.ngx-daterangepicker.theme-green .calendar .side-container .side-container-buttons .side-button{border-color:#0b7285}.ngx-daterangepicker.theme-green .calendar .side-container .side-container-buttons .side-button.is-active,.ngx-daterangepicker.theme-green .calendar .side-container .side-container-buttons .side-button:hover{background:#0b7285}.ngx-daterangepicker.theme-teal.is-active{border-color:#087f5b}.ngx-daterangepicker.theme-teal .input-section .label-txt{color:#087f5b}.ngx-daterangepicker.theme-teal .input-section .cal-icon svg path{fill:#087f5b}.ngx-daterangepicker.theme-teal .calendar{border-color:#087f5b}.ngx-daterangepicker.theme-teal .calendar .arrow{border-top-color:#087f5b;border-left-color:#087f5b}.ngx-daterangepicker.theme-teal .calendar .calendar-container .days .day.is-from,.ngx-daterangepicker.theme-teal .calendar .calendar-container .days .day.is-within-range{background:#0edfa0}.ngx-daterangepicker.theme-teal .calendar .calendar-container .days .day .day-num.is-active,.ngx-daterangepicker.theme-teal .calendar .calendar-container .days .day .day-num:hover{background:#087f5b}.ngx-daterangepicker.theme-teal .calendar .side-container .side-container-buttons .side-button{border-color:#087f5b}.ngx-daterangepicker.theme-teal .calendar .side-container .side-container-buttons .side-button.is-active,.ngx-daterangepicker.theme-teal .calendar .side-container .side-container-buttons .side-button:hover{background:#087f5b}.ngx-daterangepicker.theme-cyan.is-active{border-color:#0b7285}.ngx-daterangepicker.theme-cyan .input-section .label-txt{color:#0b7285}.ngx-daterangepicker.theme-cyan .input-section .cal-icon svg path{fill:#0b7285}.ngx-daterangepicker.theme-cyan .calendar{border-color:#0b7285}.ngx-daterangepicker.theme-cyan .calendar .arrow{border-top-color:#0b7285;border-left-color:#0b7285}.ngx-daterangepicker.theme-cyan .calendar .calendar-container .days .day.is-from,.ngx-daterangepicker.theme-cyan .calendar .calendar-container .days .day.is-within-range{background:#13c3e3}.ngx-daterangepicker.theme-cyan .calendar .calendar-container .days .day .day-num.is-active,.ngx-daterangepicker.theme-cyan .calendar .calendar-container .days .day .day-num:hover{background:#0b7285}.ngx-daterangepicker.theme-cyan .calendar .side-container .side-container-buttons .side-button{border-color:#0b7285}.ngx-daterangepicker.theme-cyan .calendar .side-container .side-container-buttons .side-button.is-active,.ngx-daterangepicker.theme-cyan .calendar .side-container .side-container-buttons .side-button:hover{background:#0b7285}.ngx-daterangepicker.theme-grape.is-active{border-color:#862e9c}.ngx-daterangepicker.theme-grape .input-section .label-txt{color:#862e9c}.ngx-daterangepicker.theme-grape .input-section .cal-icon svg path{fill:#862e9c}.ngx-daterangepicker.theme-grape .calendar{border-color:#862e9c}.ngx-daterangepicker.theme-grape .calendar .arrow{border-top-color:#862e9c;border-left-color:#862e9c}.ngx-daterangepicker.theme-grape .calendar .calendar-container .days .day.is-from,.ngx-daterangepicker.theme-grape .calendar .calendar-container .days .day.is-within-range{background:#ba60d0}.ngx-daterangepicker.theme-grape .calendar .calendar-container .days .day .day-num.is-active,.ngx-daterangepicker.theme-grape .calendar .calendar-container .days .day .day-num:hover{background:#862e9c}.ngx-daterangepicker.theme-grape .calendar .side-container .side-container-buttons .side-button{border-color:#862e9c}.ngx-daterangepicker.theme-grape .calendar .side-container .side-container-buttons .side-button.is-active,.ngx-daterangepicker.theme-grape .calendar .side-container .side-container-buttons .side-button:hover{background:#862e9c}.ngx-daterangepicker.theme-red.is-active{border-color:#c92a2a}.ngx-daterangepicker.theme-red .input-section .label-txt{color:#c92a2a}.ngx-daterangepicker.theme-red .input-section .cal-icon svg path{fill:#c92a2a}.ngx-daterangepicker.theme-red .calendar{border-color:#c92a2a}.ngx-daterangepicker.theme-red .calendar .arrow{border-top-color:#c92a2a;border-left-color:#c92a2a}.ngx-daterangepicker.theme-red .calendar .calendar-container .days .day.is-from,.ngx-daterangepicker.theme-red .calendar .calendar-container .days .day.is-within-range{background:#e27777}.ngx-daterangepicker.theme-red .calendar .calendar-container .days .day .day-num.is-active,.ngx-daterangepicker.theme-red .calendar .calendar-container .days .day .day-num:hover{background:#c92a2a}.ngx-daterangepicker.theme-red .calendar .side-container .side-container-buttons .side-button{border-color:#c92a2a}.ngx-daterangepicker.theme-red .calendar .side-container .side-container-buttons .side-button.is-active,.ngx-daterangepicker.theme-red .calendar .side-container .side-container-buttons .side-button:hover{background:#c92a2a}.ngx-daterangepicker.theme-gray.is-active{border-color:#212529}.ngx-daterangepicker.theme-gray .input-section .label-txt{color:#212529}.ngx-daterangepicker.theme-gray .input-section .cal-icon svg path{fill:#212529}.ngx-daterangepicker.theme-gray .calendar{border-color:#212529}.ngx-daterangepicker.theme-gray .calendar .arrow{border-top-color:#212529;border-left-color:#212529}.ngx-daterangepicker.theme-gray .calendar .calendar-container .days .day.is-from,.ngx-daterangepicker.theme-gray .calendar .calendar-container .days .day.is-within-range{background:#4e5862}.ngx-daterangepicker.theme-gray .calendar .calendar-container .days .day .day-num.is-active,.ngx-daterangepicker.theme-gray .calendar .calendar-container .days .day .day-num:hover{background:#212529}.ngx-daterangepicker.theme-gray .calendar .side-container .side-container-buttons .side-button{border-color:#212529}.ngx-daterangepicker.theme-gray .calendar .side-container .side-container-buttons .side-button.is-active,.ngx-daterangepicker.theme-gray .calendar .side-container .side-container-buttons .side-button:hover{background:#212529}`],\n    providers: [DATERANGEPICKER_VALUE_ACCESSOR]\n})\nexport class NgxDateRangePickerComponent implements ControlValueAccessor, OnInit, AfterViewInit, OnChanges {\n    @ViewChild('fromInput') fromInput: ElementRef;\n    @Input() options: NgxDateRangePickerOptions;\n\n    modelValue: string | Object;\n    opened: false | 'from' | 'to';\n    date: Date;\n    dateFrom: Date;\n    dateTo: Date;\n    dayNames: string[];\n    days: IDay[];\n    range: string;\n    defaultOptions: NgxDateRangePickerOptions = {\n        theme: 'default',\n        labels: ['Start', 'End'],\n        locale: 'en',\n        menu: [],\n        dateFormat: 'DD-MM-YYYY',\n        outputFormat: 'DD-MM-YYYY',\n        outputType: 'string',\n        startOfWeek: 1,\n        date: null\n    };\n\n    arrowLeft: number;\n\n    private onTouchedCallback: () => void = () => {\n    }\n    private onChangeCallback: (_: any) => void = () => {\n    }\n\n    constructor(private elementRef: ElementRef, private cdr: ChangeDetectorRef) {\n    }\n\n    get value(): string | Object {\n        return this.modelValue;\n    }\n\n    set value(value: string | Object) {\n        if (!value) {\n            return;\n        }\n        this.modelValue = value;\n        this.onChangeCallback(value);\n    }\n\n    writeValue(value: string) {\n        if (!value) {\n            return;\n        }\n        this.modelValue = value;\n    }\n\n    registerOnChange(fn: any) {\n        this.onChangeCallback = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this.onTouchedCallback = fn;\n    }\n\n    ngAfterViewInit(): void {\n        this.arrowLeft = this.fromInput.nativeElement.offsetWidth;\n        this.cdr.detectChanges();\n    }\n\n    ngOnInit() {\n        this.opened = false;\n\n        this.defaultOptions.date = {\n            from: this.date,\n            to: dateFns.addDays(this.date, 1)\n        };\n\n        this.options = this.options || this.defaultOptions;\n        this.initNames();\n\n        if (this.options.range) {\n            this.selectRange(this.options.menu.filter((item) => {\n                return this.options.range === item.alias;\n            })[0]);\n        } else {\n            if (!this.options.date) {\n                this.options.date = this.defaultOptions.date;\n            }\n\n            this.selectDates(this.options.date);\n        }\n    }\n\n    ngOnChanges(changes: { [propName: string]: SimpleChange }) {\n        this.options = this.options || this.defaultOptions;\n\n\n        if (this.options.date) {\n            this.selectDates(this.options.date);\n        }\n\n        this.initNames();\n    }\n\n    initNames(): void {\n        this.dayNames = [];\n        for (let i = 1; i < 7; ++i) {\n            this.dayNames.push(this.getDayOfWeek(i));\n        }\n\n        this.dayNames.push(this.getDayOfWeek(0));\n    }\n\n    getDayOfWeek(day: number): string {\n        const date = new Date();\n        const dayOfWeek = dateFns.format(dateFns.setDay(date, day, { weekStartsOn: 1 }), 'dd', { locale: locales[this.options.locale] });\n        return dayOfWeek[0].toUpperCase() + dayOfWeek.substring(1);\n    }\n\n    generateCalendar(): void {\n        this.days = [];\n        const start: Date = dateFns.startOfMonth(this.date);\n        const end: Date = dateFns.endOfMonth(this.date);\n\n        const days: IDay[] = dateFns.eachDay(start, end).map(d => {\n            const startOfWeek = this.options.startOfWeek;\n            const endOfWeek = startOfWeek === 0 ? 6 : 0;\n            return {\n                date: d,\n                day: dateFns.getDate(d),\n                weekday: dateFns.getDay(d),\n                startOfWeek,\n                endOfWeek,\n                today: dateFns.isToday(d),\n                firstMonthDay: dateFns.isFirstDayOfMonth(d),\n                lastMonthDay: dateFns.isLastDayOfMonth(d),\n                visible: true,\n                from: dateFns.isSameDay(this.dateFrom, d),\n                to: dateFns.isSameDay(this.dateTo, d),\n                isWithinRange: dateFns.isWithinRange(d, this.dateFrom, this.dateTo)\n            };\n        });\n\n        const prevMonthDayNum = dateFns.getDay(start) - 1;\n        let prevMonthDays: IDay[] = [];\n        if (prevMonthDayNum > 0) {\n            prevMonthDays = Array.from(Array(prevMonthDayNum).keys()).map(i => {\n                const d = dateFns.subDays(start, prevMonthDayNum - i);\n                return {\n                    date: d,\n                    day: dateFns.getDate(d),\n                    weekday: dateFns.getDay(d),\n                    firstMonthDay: dateFns.isFirstDayOfMonth(d),\n                    lastMonthDay: dateFns.isLastDayOfMonth(d),\n                    today: false,\n                    visible: false,\n                    from: false,\n                    to: false,\n                    isWithinRange: false\n                };\n            });\n        }\n\n        this.days = prevMonthDays.concat(days);\n        if (this.options.outputType === 'object') {\n            this.value = {\n                from: dateFns.format(this.dateFrom, this.options.outputFormat),\n                to: dateFns.format(this.dateTo, this.options.outputFormat)\n            };\n        } else {\n            this.value =\n                `${dateFns.format(this.dateFrom, this.options.outputFormat)}-${dateFns.format(this.dateTo, this.options.outputFormat)}`;\n        }\n    }\n\n    toggleCalendar(e: MouseEvent, selection: 'from' | 'to'): void {\n        // Arrow position\n        if (selection === 'from') {\n            this.arrowLeft = this.fromInput.nativeElement.offsetWidth * 0.4;\n        } else {\n            this.arrowLeft = this.fromInput.nativeElement.offsetWidth + this.fromInput.nativeElement.offsetWidth * 0.4;\n        }\n\n        if (this.opened && this.opened !== selection) {\n            this.opened = selection;\n        } else {\n            this.opened = this.opened ? false : selection;\n        }\n    }\n\n    closeCalendar(e: MouseEvent): void {\n        this.opened = false;\n    }\n\n    selectDate(e: MouseEvent, index: number): void {\n        e.preventDefault();\n        const selectedDate: Date = this.days[index].date;\n\n        if ((this.opened === 'to' && dateFns.isBefore(selectedDate, this.dateFrom))) {\n            this.opened = 'from';\n        }\n\n        if ((this.opened === 'from' && dateFns.isAfter(selectedDate, this.dateTo))) {\n            this.dateFrom = selectedDate;\n            this.dateTo = selectedDate;\n        }\n\n        if (this.opened === 'from') {\n            this.dateFrom = selectedDate;\n            this.opened = 'to';\n        } else if (this.opened === 'to') {\n            this.dateTo = selectedDate;\n            this.opened = 'from';\n        }\n\n        if (this.opened === 'from') {\n            this.arrowLeft = this.fromInput.nativeElement.offsetWidth * 0.4;\n        } else {\n            this.arrowLeft = this.fromInput.nativeElement.offsetWidth + this.fromInput.nativeElement.offsetWidth * 0.4;\n        }\n\n        if (this.options.menu && this.options.menu.length > 0) {\n            this.options.menu.map((item) => {\n                item.active = false;\n            });\n        }\n\n        this.generateCalendar();\n    }\n\n    prevMonth(): void {\n        this.date = dateFns.subMonths(this.date, 1);\n        this.generateCalendar();\n    }\n\n    nextMonth(): void {\n        this.date = dateFns.addMonths(this.date, 1);\n        this.generateCalendar();\n    }\n\n    selectDates(dates: NgxDateRangePickerDates): void {\n        if (dates.from instanceof Date) {\n            this.dateFrom = dates.from;\n        } else {\n            this.dateFrom = dateFns.startOfDay(new Date(dates.from.year, dates.from.month - 1, dates.from.day));\n        }\n\n        if (dates.to instanceof Date) {\n            this.dateTo = dates.to;\n        } else {\n            this.dateTo = dateFns.startOfDay(new Date(dates.to.year, dates.to.month - 1, dates.to.day));\n        }\n\n        if (dateFns.isAfter(this.dateFrom, this.dateTo)) {\n            this.dateTo = this.dateFrom;\n        }\n\n        this.date = dateFns.startOfDay(this.dateFrom);\n\n        this.generateCalendar();\n    }\n\n    selectRange(range: NgxMenuItem): void {\n        const today = dateFns.startOfDay(new Date());\n        let fromDate = today;\n        let toDate = today;\n\n        this.options.menu.map((item) => {\n            item.active = item.alias === range.alias;\n        });\n\n        const operand = range.operation.charAt(0) === '-' ? -1 : 1;\n        const amount = Math.abs(parseInt(range.operation, 10));\n        const ope = range.operation.match(/[d,w,m,y]t?/);\n        const unit = ope.length > 0 ? ope[0] : '';\n\n        switch (unit) {\n            case 'm':\n                if (amount) {\n                    fromDate = dateFns.addMonths(fromDate, amount * operand);\n                    toDate = dateFns.addMonths(fromDate, (amount - 1));\n                }\n\n                this.dateFrom = dateFns.startOfMonth(fromDate);\n                this.dateTo = dateFns.endOfMonth(toDate);\n                break;\n            case 'w':\n                if (amount) {\n                    fromDate = dateFns.addWeeks(fromDate, amount * operand);\n                    toDate = dateFns.addWeeks(fromDate, (amount - 1));\n                }\n\n                this.dateFrom = dateFns.startOfWeek(fromDate, { weekStartsOn: this.options.startOfWeek });\n                this.dateTo = dateFns.endOfWeek(toDate, { weekStartsOn: this.options.startOfWeek });\n                break;\n            case 'y':\n                if (amount) {\n                    fromDate = dateFns.addYears(fromDate, amount * operand);\n                    toDate = dateFns.addYears(fromDate, (amount - 1));\n                }\n\n                this.dateFrom = dateFns.startOfYear(fromDate);\n                this.dateTo = dateFns.endOfYear(toDate);\n                break;\n            case 'd':\n                if (amount) {\n                    fromDate = dateFns.addDays(fromDate, amount * operand);\n                    toDate = dateFns.addDays(fromDate, (amount - 1));\n                }\n\n                this.dateFrom = dateFns.startOfDay(fromDate);\n                this.dateTo = dateFns.startOfDay(toDate);\n                break;\n            // From today\n            case 'mt':\n                if (operand < 0) {\n                    fromDate = dateFns.subMonths(today, amount);\n                } else {\n                    toDate = dateFns.addMonths(today, amount);\n                }\n\n                this.dateFrom = fromDate;\n                this.dateTo = toDate;\n                break;\n            case 'wt':\n                if (operand < 0) {\n                    fromDate = dateFns.subWeeks(today, amount);\n                } else {\n                    toDate = dateFns.addWeeks(today, amount);\n                }\n\n                this.dateFrom = fromDate;\n                this.dateTo = toDate;\n                break;\n            case 'yt':\n                if (operand < 0) {\n                    fromDate = dateFns.subYears(today, amount);\n                } else {\n                    toDate = dateFns.addYears(today, amount);\n                }\n\n                this.dateFrom = fromDate;\n                this.dateTo = toDate;\n                break;\n            default:\n                if (operand < 0) {\n                    fromDate = dateFns.subDays(today, amount);\n                } else {\n                    toDate = dateFns.addDays(today, amount);\n                }\n                this.dateFrom = fromDate;\n                this.dateTo = toDate;\n                break;\n        }\n\n        this.date = dateFns.startOfDay(this.dateFrom);\n\n        this.range = range.alias;\n        this.generateCalendar();\n    }\n\n    @HostListener('document:click', ['$event'])\n    handleBlurClick(e: MouseEvent) {\n        const target = e.srcElement || e.target;\n        if (!this.elementRef.nativeElement.contains(e.target) && !(<Element>target).classList.contains('day-num')) {\n            this.opened = false;\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as dateFns from 'date-fns';\nimport { locales } from './constants';\n\n@Pipe({\n  name: 'ngxFormat'\n})\nexport class NgxFormatPipe implements PipeTransform {\n\n  transform(value: Date, ...args: Array<any>): any {\n    const options: any = {};\n    if (args && args[1] && locales.hasOwnProperty(args[1])) {\n      options.locale = locales[args[1]];\n    }\n\n    return dateFns.format(value, args[0] || 'DD-MM-YYYY', options);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { NgxDateRangePickerComponent } from './ngx-daterangepicker/ngx-daterangepicker.component';\nimport { NgxFormatPipe } from './ngx-daterangepicker/ngx-format.pipe';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  declarations: [NgxDateRangePickerComponent, NgxFormatPipe],\n  exports: [NgxDateRangePickerComponent, NgxFormatPipe, FormsModule]\n})\nexport class NgxDateRangePickerModule { }\n"]}